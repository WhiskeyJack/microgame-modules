<?php

/**
 * @file
 * Install, update, and uninstall functions for the subdomain_manager module.
 */
function portal_manager_uninstall() {
  db_drop_table('microgame_subdomains');
  db_drop_table('microgame_games');
  db_drop_table('microgame_game_versions');
  db_drop_table('microgame_subdomain_games');
  user_role_delete('portal manager');
  user_role_delete('group manager');
  menu_delete('microgame_portal');
}

function portal_manager_requirements($phase) {
  $requirements = array();
  if ($phase == 'install') {
    if (!variable_get('file_private_path', FALSE)) {
      $requirements['private_streamwrapper'] = array(
          'title' => st('private streamwrapper file location'),
          'description' => st('The private file system path <a href="config/media/file-system">setting</a> must be set in the file section under configuration'),
          'severity' => REQUIREMENT_ERROR
      );
    }
  }
  return $requirements;
}

function portal_manager_install() {

  // fetch all permissions from db so we can check if attached module still exists
  $permission_list = db_select('role_permission', 'r')->fields('r')->execute()->fetchallAssoc('permission');

  $role = new stdClass();
  $role->name = 'portal manager';
  // load the authenticated user role
  $auth_role = user_role_load(DRUPAL_AUTHENTICATED_RID);
  // Give the weight more than authenticate user, so that
  // New role will have all the authenticated user permissions by default.
  $role->weight = $auth_role->weight + 2;
  user_role_save($role);
  $auth_permissions = user_role_permissions(array(DRUPAL_AUTHENTICATED_RID => 'authenticated users'));

  // check for each permission if the corresponding module is still enabled, if not, don't include it
  $default_permissions = array();
  foreach ($auth_permissions[DRUPAL_AUTHENTICATED_RID] as $permission => $enabled) {
    if (module_exists($permission_list[$permission]->module)) {
      $default_permissions[$permission] = $enabled;
    }
  }
  $new_permissions = $default_permissions + array('create subdomains' => 1, 'edit subdomain' => 1, 'upload games' => 1, 'enable games' => 1);
  user_role_grant_permissions($role->rid, array_keys($new_permissions));

  $role = new stdClass();
  $role->name = 'group manager';
  // load the authenticated user role
  $auth_role = user_role_load(DRUPAL_AUTHENTICATED_RID);
  // Give the weight more than authenticate user, so that
  // New role will have all the authenticated user permissions by default.
  $role->weight = $auth_role->weight + 1;
  user_role_save($role);
  $new_permissions = $default_permissions + array('edit subdomain' => 1, 'enable games' => 1);
  user_role_grant_permissions($role->rid, array_keys($new_permissions));

  // super user account
  $result = db_query("SELECT rid FROM {role} where name like :id", array(':id' => 'administrator'));
  $admin_rid = $result->fetchField(0);
  user_role_change_permissions($admin_rid, array('create subdomains' => 1, 'edit subdomain' => 1, 'upload games' => 1, 'enable games' => 1));

  $menu = array(
      'menu_name' => 'microgame_portal',
      'title' => st('Microgame portal'),
      'description' => st('Microgame portal pages'),
  );
  menu_save($menu);
  $menu = array(
      'menu_name' => 'microgame_portal_admin',
      'title' => st('Microgame portal administration'),
      'description' => st('Microgame portal administration pages'),
  );
  menu_save($menu);

  // create directory for storing the games
  if (!drupal_realpath('private://games/')) {
    drupal_mkdir('private://games/');
  }
}

function portal_manager_schema() {
  $schema['microgame_subdomains'] = array(
      'description' => 'Contains the configured subdomains',
      'fields' => array(
          'sdid' => array(
              'description' => 'Subdomain ID and primary key',
              'type' => 'serial',
              'length' => 4,
              'not null' => TRUE,
          ),
          'name' => array(
              'description' => 'Name of the subdomain',
              'type' => 'varchar',
              'length' => 50,
              'not null' => TRUE,
          ),
          'group_name' => array(
              'description' => 'Group name of the subdomain',
              'type' => 'varchar',
              'length' => 50,
              'not null' => TRUE,
          ),
          'theme_name' => array(
              'description' => 'Theme name of the subdomain',
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
          ),
          'rid' => array(
              'description' => 'Drupal role id',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'created_on' => array(
              'description' => 'Unix timestamp of creation',
              'type' => 'int',
              'length' => 11,
              'not null' => TRUE,
          ),
          'created_by_uid' => array(
              'description' => 'User ID of creator',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'updated_on' => array(
              'description' => 'Unix timestamp of last update',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'updated_by_uid' => array(
              'description' => 'User ID of last editor',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('sdid'),
      'unique_keys' => array('name'),
  );
  
  $schema['microgame_games'] = array(
      'description' => 'Contains the available games',
      'fields' => array(
          'gid' => array(
              'description' => 'Game ID and primary key',
              'type' => 'serial',
              'length' => 4,
              'not null' => TRUE,
          ),
          'name' => array(
              'description' => 'Name of the game',
              'type' => 'varchar',
              'length' => 50,
              'not null' => TRUE,
          ),
          'description' => array(
              'description' => 'Description of the game',
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
          ),
          'active_version' => array(
              'description' => 'Active version id of the game',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'active_fid' => array(
              'description' => 'Active file ID of the game',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'custom_stats_count' => array(
              'description' => 'Nr of custom stats columns for this game',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'created_on' => array(
              'description' => 'Unix timestamp of creation',
              'type' => 'int',
              'length' => 11,
              'not null' => TRUE,
          ),
          'created_by_uid' => array(
              'description' => 'User ID of creator',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'updated_on' => array(
              'description' => 'Unix timestamp of last update',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'updated_by_uid' => array(
              'description' => 'User ID of last editor',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('gid'),
      'unique_keys' => array('name'),
  );
  
  $schema['microgame_game_versions'] = array(
      'description' => 'Contains the available versions for each game',
      'fields' => array(
          'gid' => array(
              'description' => 'Game ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'version_id' => array(
              'description' => 'Version ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'fid' => array(
              'description' => 'File ID for the version',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'uploaded_by_uid' => array(
              'description' => 'User ID of uploader',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'uploaded_on' => array(
              'description' => 'Unix timestamp of upload',
              'type' => 'int',
              'length' => 11,
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('gid', 'version_id'),
  );

  $schema['microgame_subdomain_games'] = array(
      'description' => 'Contains the games made available for a subdomain',
      'fields' => array(
          'sdid' => array(
              'description' => 'Subdomain ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'gid' => array(
              'description' => 'Game ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'version_id' => array(
              'description' => 'Version ID of the game',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'weight' => array(
              'description' => 'Weight or sortorder for displaying the games',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'enabled' => array(
              'description' => 'If the game is enabled or greyed out',
              'type' => 'int',
              'size' => 'tiny',
              'not null' => TRUE,
          ),
          'closebtn' => array(
              'description' => 'If the overlay shows a close button',
              'type' => 'int',
              'size' => 'tiny',
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('sdid', 'gid'),
  );

  $schema['microgame_game_active_sessions'] = array(
      'description' => 'Contains the games made available for a subdomain',
      'fields' => array(
          'hash' => array(
              'description' => 'Unique hash sent to client',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'gid' => array(
              'description' => 'Game ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'version_id' => array(
              'description' => 'Version ID of the game',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'sdid' => array(
              'description' => 'Subdomain ID',
              'type' => 'int',
              'length' => 4,
              'not null' => TRUE,
          ),
          'created_by_uid' => array(
              'description' => 'User ID of creator',
              'type' => 'int',
              'length' => 10,
              'not null' => TRUE,
          ),
          'created_on' => array(
              'description' => 'Unix timestamp of creation',
              'type' => 'int',
              'length' => 11,
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('hash'),
  );
  
  return $schema;
}