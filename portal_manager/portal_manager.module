<?php
/**
 * @file
 * Hook functions and subdomain function for the subdomain_manager module.
 */

function portal_manager_permission() {
  return array(
      'create subdomains' => array(
          'title' => t('Create new subdomains'),
          'description' => t('Allow users to configure new subdomains'),
      ),
      'edit subdomain' => array(
          'title' => t('Edit subdomain'),
          'description' => t('Allow users to configure a subdomain'),
      ),
     'upload games' => array(
          'title' => t('Upload games to the portal'),
          'description' => t('Allow users to upload games to the portal'),
      ),
      'enable games' => array(
          'title' => t('Enable games'),
          'description' => t('Allow users to enable (uploaded) games for their group'),
      ),
  );
}

function portal_manager_menu() {
    $items["portal/admin"] = array(
      'title' => 'configuration',
      'description' => 'Microgame portal configuration',
      'access arguments' => array('edit subdomain'),
      'page callback' => 'portal_admin_page',
      'file' => 'includes/page.portal_admin.inc',
      'menu_name' => 'microgame_portal',
      'weight' => 100,
      'options' => array('attributes' => array('class' => array('mg_portal_menu', 'mg_portal_admin'))),
  ); 
  $items["portal/admin/subdomains"] = array(
      'title' => 'Configured subdomains',
      'description' => 'Configured subdomains',
      'access arguments' => array('create subdomains'),
      'page callback' => 'portal_subdomain_page',
      'file' => 'includes/page.subdomains.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 9
  );
  $items["portal/admin/subdomains/%/games"] = array(
      'title' => 'Configured games for subdomain',
      'description' => 'Configured games for subdomain',
      'access arguments' => array('upload games'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('subdomain_game_edit_form'),
      'file' => 'includes/form.subdomain-game.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 9
  );
  $items["portal/admin/subdomains/create"] = array(
      'title' => 'Create subdomain',
      'description' => 'Create a new subdomain',
      'access arguments' => array('create subdomains'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('subdomain_edit_form'),
      'file' => 'includes/form.subdomain_edit.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 10
  );
  $items["portal/admin/subdomains/edit"] = array(
      'title' => 'Edit subdomain',
      'description' => 'Edit a subdomain',
      'access arguments' => array('edit subdomain'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('subdomain_edit_form'),
      'file' => 'includes/form.subdomain_edit.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 11
  );
  $items["portal/admin/games"] = array(
      'title' => 'Configured games',
      'description' => 'Configured games',
      'access arguments' => array('upload games'),
      'page callback' => 'portal_games_page',
      'file' => 'includes/page.games.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 9
  );
  $items["portal/admin/games/upload"] = array(
      'title' => 'Create game',
      'description' => 'Create a new game',
      'access arguments' => array('upload games'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_edit_form'),
      'file' => 'includes/form.game_edit.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 10
  );
  $items["portal/admin/games/edit"] = array(
      'title' => 'Edit game',
      'description' => 'Edit a game',
      'access arguments' => array('upload games'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_edit_form'),
      'file' => 'includes/form.game_edit.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 11
  );
  return $items;
}

/**
 * Implementation of hook_custom_theme
 */
function portal_manager_custom_theme() {
  $theme = subdomain()->theme() ;
  if (!empty($theme))
  {
    return $theme;
  }
}


/**
 * Implements hook_theme().
 *
 * We need run our forms through custom theme functions in order to build the
 * table structure which is required by tabledrag.js.  Before we can use our
 * custom theme functions, we need to implement hook_theme in order to register
 * them with Drupal.
 *
 * We are defining our theme hooks with the same name as the form generation
 * function so that Drupal automatically calls our theming function when the
 * form is displayed.
 */
function portal_manager_theme() {
  return array(
    // Theme function for the 'parent/child' example
    'subdomain_game_edit_form' => array(
      'render element' => 'form',
      'file' => 'includes/form.subdomain-game.inc',
    ),
  );
}



/* *
 * Retrieves the subdomain singleton instance
 */
function subdomain() {
  static $_subdomain;
  if (!isset($_subdomain)) {
    $_subdomain = new Subdomain();
  }
  return $_subdomain;
}

function mg_string_to_filename($word) {
    $tmp = preg_replace('/^\W+|\W+$/', '', $word); // remove all non-alphanumeric chars at begin & end of string
    $tmp = preg_replace('/\s+/', '_', $tmp); // compress internal whitespace and replace with _
    return strtolower(preg_replace('/\W-/', '', $tmp)); // remove all non-alphanumeric chars except _ and -
}

/***
 * Returns the gid if a game with the given name exists, false otherwise
 */
function mg_game_name_exists($name) {
   return db_select('microgame_games', 'm')->fields('m', array('gid'))->condition('m.name', $name, '=')->execute()->fetchField();
}