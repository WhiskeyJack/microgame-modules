<?php

/**
 * @file
 * Module file for portal statistics.
 */

function portal_games_permission() {
  return array(
      'play games' => array(
          'title' => t('Play Microgame portal games'),
          'description' => t('Allow users to play the portal games'),
      ),
  );
}

function portal_games_menu() {
  $items["portal/games"] = array(
      'title' => 'games',
      'description' => 'Games',
      'page callback' => 'portal_games_page',
      'access arguments' => array('play games'),
      'file' => 'includes/page.games_home.inc',
      'menu_name' => 'microgame_portal',
      'weight' => 5,
      'options' => array('attributes' => array('class' => array('mg_portal_menu', 'mg_portal_games'))),
  );
  $items["portal/game/%portal_games_game"] = array(
      'title' => 'game page',
      'description' => 'Game page',
      'page callback' => 'portal_game_page',
      'page arguments' => array(2),
      'access arguments' => array('play games'),
      'file' => 'includes/page.game.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 10,
  );
    $items["portal/game/%portal_games_game/play"] = array(
      'title' => 'game page',
      'description' => 'Game page',
      'page callback' => 'portal_game_play',
      'page arguments' => array(2),
      'access arguments' => array('play games'),
      'file' => 'includes/page.game_play.inc',
      'menu_name' => 'microgame_portal',
      'type' => MENU_CALLBACK,
      'weight' => 10,
  );
  return $items;
}

function portal_games_file_download($uri, $field_type = 'file') {
  //return if the user doesn't have access
  if (!user_access('play games')) {
    return;
  }

  // Get the file record based on the URI. If not in the database just return.
  $files = file_load_multiple(array(), array('uri' => $uri));
  if (count($files)) {
    foreach ($files as $item) {
      // Since some database servers sometimes use a case-insensitive comparison
      // by default, double check that the filename is an exact match.
      if ($item->uri === $uri) {
        $file = $item;
        break;
      }
    }
  }
  if (!isset($file)) {
    return;
  }

  // rename file
  //$file->filename = "game";

  // File was found, and access is granted, return the header
  $headers = file_get_content_headers($file);
  return $headers;
}



function portal_games_game_load($game_id) {
  $game = new Game($game_id);  
  if ($game->gid() == 0) {
    return FALSE;
  }
  else {
    return $game;
  }
}

function mg_debug($message) {
  $filename = "debug.log";
  $dir = drupal_get_path('module', 'portal_manager') . '/debug/';
    if (!$handle = fopen($dir . $filename, 'a')) {
      drupal_set_message("Cannot open debug log \"{$dir}{$filename}", 'error');
  }
  $message = "=== " . date(DATE_RFC822) . " ===\n{$message}\n\n\n";
    if (fwrite($handle, $message) === FALSE) {
       drupal_set_message("Cannot write to debug log \"{$dir}{$filename}", 'error');
    }
    fclose($handle);
  }